(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{443:function(t,e,i){"use strict";i.r(e);var a=i(1),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("hr"),t._v(" "),e("h2",{attrs:{id:"theme-channing-cyan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#theme-channing-cyan"}},[t._v("#")]),t._v(" theme: channing-cyan")]),t._v(" "),e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言：")]),t._v(" "),e("p",[t._v("大家都在关注devops，关注如何来做持续集成，持续交付，如何来做CI/CD。Jenkins作为持续集成的工具，他其实只是一个平台或者是一个大的框架，它的工作完全就是依靠插件，也就是说你想使用什么功能，你就找到什么样的插件。(别的地方抄来的一段话...)")]),t._v(" "),e("h3",{attrs:{id:"_1-gitte-pages使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-gitte-pages使用"}},[t._v("#")]),t._v(" 1. gitte pages使用")]),t._v(" "),e("p",[t._v("不知道大家在干一些本地开发而没有服务器的情况下，想部署一个静态网页是怎么做的？\n很多代码平台都有其对应的page功能，类似部署成一个静态网站，比如github的pages或者之前的preview功能，不过github最近貌似很容易连接不上，这时候我把目光放在了gitte pages功能。\n")]),e("div",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bee154e8e6764fc39594b45a6039082a~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),e("p"),t._v(" "),e("p",[t._v("因为只是简单演示，所以我选了一个很早之前的项目  "),e("strong",[e("a",{attrs:{href:"http://wangxiaoer520.gitee.io/admin-templete/",target:"_blank",rel:"noopener noreferrer"}},[t._v("静态页面demo"),e("OutboundLink")],1)]),t._v("\n这个大家基本都会，我说一下注意点：\n")]),e("div",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a16267dc403f4bef961552bd2a6df723~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),e("p"),t._v(" "),e("p",[t._v("我选择了某个分支(dev)用来部署静态页面，指向这个目录下的index.html，路径要对，不然可能导致访问项目是空的之类\n比如要是打包项目的部署也可以用gitee pages\n")]),e("div",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/39ee0a737d9e4adbbeefed05f1993a39~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n仔细看上图就可以看见在引入打包后的js和css是/...这就导致引用路径不对，相对路径同级是./...   所以可以在打包配置那里修改一下\n"),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d34d04167a284f979217519f8bf79a6f~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n当然了 这要根据你实际项目去修改，你也可以打包成功手动修改上传 然后重新部署。"),e("p"),t._v(" "),e("h3",{attrs:{id:"_2-jenkins安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-jenkins安装"}},[t._v("#")]),t._v(" 2.jenkins安装")]),t._v(" "),e("h5",{attrs:{id:"linux安装jenkins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux安装jenkins"}},[t._v("#")]),t._v(" Linux安装jenkins：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("下载jdk java-1.8.0\nyum install java-1.8.0-openjdk.x86_64\n")]),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/479001f1fadd4eafb3744070d1b27eca~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),e("p")]),t._v(" "),e("li",[e("p",[t._v("下载yum install jenkins\nPs : 这里的jenkins版本过低 所以安装的话推荐另外的方法：\n"),e("strong",[e("a",{attrs:{href:"http://www.21yunwei.com/archives/4368",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装参考链接"),e("OutboundLink")],1)])])])]),t._v(" "),e("p",[e("code",[t._v("wget https://pkg.jenkins.io/redhat-stable/jenkins-2.176.3-1.1.noarch.rpm")])]),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9499eb0c3acd4125ab09211e56155423~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),e("p"),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("安装jenkins\nrpm -ih jenkins-2.176.3-1.1.noarch.rpm\n"),e("div",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44b63c2c06314fdeb76b575eab980d1c~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n到这安装完成，我用的都是默认配置 改端口之类的我就不说了")])]),t._v(" "),e("h3",{attrs:{id:"ps-补充一下-我这里安装版本过低-所以导致很多插件下载安装失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps-补充一下-我这里安装版本过低-所以导致很多插件下载安装失败"}},[t._v("#")]),t._v(" PS：补充一下，我这里安装版本过低 所以导致很多插件下载安装失败，")]),t._v(" "),e("p",[t._v("yum upgrade jenkins或者yum update jenkins升级一下")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("运行jenkins\nsystemctl start jenkins.service\n然后打开地址访问jenkins，根据提示下一步就行，输入密码那步查看对应目录下文件内容，按默认插件安装也行，自己进去再安装也是可以。\n"),e("div",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/38bf677c303140d8ae31b59f78af2920~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})])])]),t._v(" "),e("p",[t._v("清华大学镜像地址：https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json")]),t._v(" "),e("p",[t._v("只需要在访问jenkins的网站后面加上exi(退出)/restart(重启)/reload(重新加载)")]),t._v(" "),e("h3",{attrs:{id:"_3-简单ci-cd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-简单ci-cd"}},[t._v("#")]),t._v(" 3. 简单CI/CD")]),t._v(" "),e("p",[t._v("需求：创建个钩子去监听deploy分支的push行为，然后自动打包并部署。")]),t._v(" "),e("p",[t._v("开始jenkins配置,下载好了gitee插件")]),t._v(" "),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20b6c938396d407dbe6947f329b418d8~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n添加凭据\n"),e("div",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f649914aaf7049379896f108aeb49d9a~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n生成wenbhock，等等配置gitee的webhock有用\n"),e("div",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/842078b83231468bbf3ec3bf033c9bb1~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n这时候可以可以点击gitee的webhock测试\n"),e("div",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/72664eeb7d0c4461998233aa66d7339f~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n发现触发构建说明两者联系成功。\n"),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/147034384bc140639927c2fbb89b4f5b~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n这里我从网上搜了一份自动登录gitee的脚本和自动点击更新gitee pages的脚本，参考一下改成自己对应的\n"),e("p",[e("strong",[e("a",{attrs:{href:"https://www.jianshu.com/p/6460df84a099",target:"_blank",rel:"noopener noreferrer"}},[t._v("自动化部署gitee pages脚本"),e("OutboundLink")],1)]),t._v("\n我在服务器上新建了个文件 发这个脚本代码\n")]),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c616ca2bfbc34b7cbcd465775d215967~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),t._v("\n添加构建脚本，执行node test.js\n"),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/28550f7cb9fe40b6a91e4087529bed0e~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),e("p"),t._v(" "),e("p",[t._v("现在可以push一下代码 看看html页面是否有改变。")]),t._v(" "),e("p",[t._v("当然咯 以上说的是gitee pages的自动更新部署的思路，pages适合静态网页，比如放一些html的页面的项目。如果是项目部署其实只是把构建脚本改成你对应的，比如我另一个部署在服务器的项目，执行自动打包并部署，接下来有时间说一下服务器项目部署项目和自动打包部署。\n")]),e("div",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e9631655bf284b97858e132e721347c6~tplv-k3u1fbpfcp-watermark.image",height:"100",width:"200"}})]),e("p"),t._v(" "),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v("持续集成是一种软件开发实践，即团队开发成员经常集成他们的工作，通常每个成员至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽快地发现集成错误。许多团队发现这个过程可以大大减少集成的问题，让团队能够更快的开发内聚的软件。")]),t._v(" "),e("p",[t._v("其实我想说 "),e("em",[e("strong",[t._v("亲自动手试试！亲自动手试试！亲自动手试试！")])]),t._v("\n自己去试试 多试几次就会了")])])}),[],!1,null,null,null);e.default=s.exports}}]);